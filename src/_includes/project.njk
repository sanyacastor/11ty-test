---
layout: base.njk
style: bundle.css
---

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>

<body>
    {% set project = {
        data: {
            title: title,
            dates: dates,
            collaborators: collaborators,
            cardDescription: cardDescription
        }
    } %}
    <link rel="stylesheet" href="bundle.css">
    <article>

      <div class="projectView_container">
        <div class="projectView_sideBar">
            <div class="projectView_cardSlot">
                       {% include 'summary-card.njk'  %}
            </div>
            <div class="projectView_photoSlot">
                      <div class="swiper mySwiper">
                        <div class="swiper-wrapper">
                          <div class="swiper-slide">
                            <img src="/assets/data/Strings_Documentation_2006_(c)Hopkins-1.JPG" alt="Image 1" class="swiper-slide">
                          </div>
                          <div class="swiper-slide">
                            <img src="/assets/data/Strings_Documentation_2006_(c)Hopkins-2.JPG" alt="Image 2" class="swiper-slide">
                          </div>
                          <div class="swiper-slide">
                            <img src="/assets/data/Strings_Documentation_2006_(c)Hopkins-3.JPG" alt="Image 2" class="swiper-slide">
                          </div>
                          <div class="swiper-slide">
                            <img src="/assets/data/Strings_Documentation_2006_(c)Hopkins-4.JPG" alt="Image 2" class="swiper-slide">
                          </div>
                          <div class="swiper-slide">
                            <img src="/assets/data/Strings_Documentation_2006_(c)Hopkins-5.JPG" alt="Image 2" class="swiper-slide">
                          </div>
                        </div>
                        <div class="swiper-button-next"></div>
                        <div class="swiper-button-prev"></div>
                        <div class="swiper-pagination"></div>
                      </div>
            </div>
        </div>
        <div class="projectView_blockText">
          <div id="projectView_outer">
            <div class="projectView_ScrollArticle" id="scrollArticle">
                {{content | safe}}
            </div>
        </div>
        </div>

        <div class="projectView_navigation" id="projectView_scrollNavBar">
            0 1 2 3 4
        <div>
      </div>

      <hr>
    </article>

    <script>
      // use a script tag or an external JS file
      document.addEventListener("DOMContentLoaded", (event) => {
       // gsap code here!
      });
     
    </script>

    <script>
        const setScrollFraction = (newFrac) => {
          newFrac = Math.max(0, Math.min(newFrac, 1));

          window.targetScrollFraction = newFrac;
          //window.currentScrollFraction = newFrac;

          history.pushState(null, null, "?persent=" + newFrac * 100);
          gsap.to(document.getElementById('projectView_outer'), {scrollLeft: newFrac * document.getElementById('projectView_outer').scrollWidth, duration: 0.5, ease: "power2.inOut"});
          //document.getElementById('projectView_outer').scrollLeft = newFrac * document.getElementById('projectView_outer').scrollWidth;
        }

        const scrollStep = (pages) =>{
          console.log("scrollStep( " + parseInt( pages ) + ")");

          frac = window.targetScrollFraction;
          frac = Math.min(1, frac + pages*window.scrollStepPercent / 100);
          frac = Math.max(0, frac);

          setScrollFraction(frac);
        }

        const scrollStepRight = () => {scrollStep(window.columnsPerPage);}
        const scrollStepLeft = () => {scrollStep(-1*window.columnsPerPage);}

        document.getElementById('projectView_outer').addEventListener('wheel', function (e) {
            var delta = e.wheelDelta ? e.wheelDelta : -e.deltaY;

            console.log("delta: " + delta );
            if(delta > 0){
                scrollStepLeft();
            } else {
                scrollStepRight();
            }
        }, false);

        window.addEventListener('load', function() {
          console.log('loaded');
          onResize();
          processSlug();
          //window.history.pushState({"html":html,"pageTitle":"fdsfsdf"},"", "somePath");
        });

      window.addEventListener('resize', function() {
        onResize();
      });

      function recalcNumberOfColumns(){
        numberOfColumns = document.getElementById('projectView_outer').scrollWidth / (window.columnWidth+30); //!!!PELIGRO!!! magic numbers
        numberOfColumns = Math.floor(numberOfColumns);
        window.numberOfColumns = numberOfColumns;
        
        console.log("number of columns: " + numberOfColumns);
      }

      function recalcScrollStep(){
        window.scrollStep = 1/numberOfColumns;
        window.scrollStepPercent = 100 / numberOfColumns;
      }

      function recalcColumnsPerPage(){
        var projectViewOuter = document.getElementById('projectView_outer');
        var elementWidth = projectViewOuter.offsetWidth;
        window.columnsPerPage = parseInt( elementWidth/(416+15) ); //!!!PELIGRO!!! wrong magic numbers, parseint
        console.log("columnsPerPage: " + window.columnsPerPage);
      }

      function recalcColumnWidth(){
        if(window.columnsPerPage == 2){
          window.columnWidth = 416; //!!!PELIGRO!!! magic numbers
          
          document.getElementById('scrollArticle').style.columnWidth = window.columnWidth + 'px';
          return;  
        }
        
        if(window.columnsPerPage > 2){
          console.log("window.columnsPerPage > 2: " + window.columnsPerPage);
          window.columnWidth = 416; //!!!PELIGRO!!! magic numbers
          
          document.getElementById('scrollArticle').style.columnWidth = window.columnWidth + 'px';
          return; 
        }

        var projectViewOuter = document.getElementById('projectView_outer');
        var elementWidth = projectViewOuter.offsetWidth;
        window.columnWidth = elementWidth-50;

        document.getElementById('scrollArticle').style.columnWidth = window.columnWidth + 'px';

      }

      function redrawNavButtons(){
        document.getElementById('projectView_scrollNavBar').innerHTML = '';
        newNav = '';
        
        numberOfButtons = numberOfColumns/window.columnsPerPage;
        numberOfButtons = Math.ceil(numberOfButtons);

        console.log("numberOfColumns: " + numberOfColumns);
        console.log("window.columnsPerPage: " + window.columnsPerPage);
        console.log("numberOfButtons: " + numberOfButtons);

        for (let i = numberOfButtons-1; i >= 0; i--) {
          targetFraction = parseFloat((  (i*window.columnsPerPage) * 100 / numberOfColumns).toFixed(2));
          
          newNav += `<button class="projectView_navigationDigit"
                             id="navButton${i}"
                             targetFraction="${targetFraction}"
                             onclick="setScrollFraction(${targetFraction/100})">
                             ${i}
                    </button>`;
        }
        document.getElementById('projectView_scrollNavBar').innerHTML = newNav;
      }

      function attractScrollToNearestColumn(){
        //!!!!PELIGRO!!!! !!!todo!!!

        // var scrollFraction = window.targetScrollFraction;
        // var columnNumber = parseInt(scrollFraction/window.scrollStep);
        // var newPosition = columnNumber*window.scrollStep;

        // setScrollFraction(newPosition);
      }

      function onResize() {
        recalcColumnsPerPage();
        recalcColumnWidth();
        recalcNumberOfColumns();
        recalcScrollStep();

        redrawNavButtons();
        attractScrollToNearestColumn();
      }

      function processSlug(){
        // Get the current URL
        var currentUrl = window.location.href;

        console.log(currentUrl);
        var slug = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
        console.log("slug: " + slug);

        // Extract the parameter from the slug
        
        var parameter = slug.split('=')[1];
        if (typeof parameter === 'undefined') {
          parameter = 0;
        }

        console.log("parameter: " + parameter);
        frac = parseFloat(parameter) / 100;
        
        columnNumber = parseInt(frac/window.scrollStep);
        newPosition = columnNumber*window.scrollStep;

        console.log("frac: "+ frac + " scrollStep:" + window.scrollStep + " number: " + columnNumber + " newPosition: " + newPosition);

        setScrollFraction(newPosition);
      }
    </script>

  <!-- Swiper JS -->
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  
  <!-- Initialize Swiper -->
  <script>
    var swiper = new Swiper(".mySwiper", {
      slidesPerView: 1,
      pagination: {
          el: ".swiper-pagination",
          type: "progressbar",
      },
      navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
      },
    });
  </script>

</body>
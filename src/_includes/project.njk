---
title: Sam Hopkins | Projects {{ project.title}}
layout: base.njk
---

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>

<body>
    {% set project = {
        data: {
            title: title,
            dates: dates,
            collaborators: collaborators,
            cardDescription: cardDescription
        }
    } %}
    <!--link rel="stylesheet" href="bundle.css"-->
    <article>
      <div class='container'>
        <div class="projectView_container">
          <div class="projectView_sideBar">
              <div class="projectView_cardSlot">
                        {% include 'summary-card.njk'  %}
              </div>
              <div class="projectView_photoSlot">
                        <div class="swiper mySwiper">
                          <div class="swiper-wrapper" id="projectView_swiperWrapper">
                          </div>
                          <div class="swiper-button-next"></div>
                          <div class="swiper-button-prev"></div>
                          <div class="swiper-pagination"></div>
                        </div>
              </div>
          </div>
          <div class="projectView_blockText">
            <div id="projectView_outer">
              <div class="projectView_ScrollArticle" id="scrollArticle">
                  {{content | safe}}
                  <div class="projectView_phantomColumn"> <!--!!!PELIGRO!!! column width--></div>
              </div>
          </div>
          </div>

          <div class="projectView_navigation" id="projectView_scrollNavBar">
              0 1 2 3 4
          <div>
        </div>
      </div>
    </article>

    <script>
      // use a script tag or an external JS file
      document.addEventListener("DOMContentLoaded", (event) => {
       // gsap code here!
      });
     
    </script>

    <script>
      let checkpoints;
      let current_checkpoint_index = 0;

      function getClosestCheckpointIndex(fraction){
        let closest = checkpoints.reduce((prev, curr) => Math.abs(curr - fraction) < Math.abs(prev - fraction) ? curr : prev);
        return checkpoints.indexOf(closest);
      }

      function selectCurrentCheckpoint(){
        for (let i = 0; i < checkpoints.length; i++) {
          document.getElementById('navButton'+i).classList.remove('active');
        }
        document.getElementById('navButton'+current_checkpoint_index).classList.add('active');
      }

      const setScrollFraction = (newFrac) => {
        console.log("setScrollFraction( " + newFrac + ")");
        console.log("targetCheckpoint: " + getClosestCheckpointIndex(newFrac) + "checkpointValue: " + checkpoints[getClosestCheckpointIndex(newFrac)]);
        console.log("NotImplementedException");
        current_checkpoint_index = getClosestCheckpointIndex(newFrac);
        newFrac = checkpoints[current_checkpoint_index];
        selectCurrentCheckpoint();

        newFrac = Math.max(0, Math.min(newFrac, 1));
        
        swipeToFraction(newFrac);

        window.targetScrollFraction = newFrac;
        //window.currentScrollFraction = newFrac;

        history.pushState(null, null, "?persent=" + newFrac * 100);

        let columnGap = parseInt(getComputedStyle(document.getElementById('scrollArticle')).columnGap);
        console.log("[[[]]]>}>}>}>columnGap: " + columnGap);
        gsap.to(  document.getElementById('projectView_outer'),{
                    scrollLeft: newFrac * (document.getElementById('projectView_outer').scrollWidth+columnGap),
                    duration: 0.5, ease: "power2.inOut"
                  });
        //document.getElementById('projectView_outer').scrollLeft = newFrac * document.getElementById('projectView_outer').scrollWidth;
      }

      const scrollStep = (pages) =>{
        console.log("scrollStep( " + parseInt( pages ) + ")");

        frac = window.targetScrollFraction;
        frac = Math.min(1, frac + pages*window.scrollStepPercent / 100);
        frac = Math.max(0, frac);

        setScrollFraction(frac);
      }

      /*deprecated*/ const scrollStepRight = () => {scrollStep(window.columnsPerPage);}
      /*deprecated*/ const scrollStepLeft = () => {scrollStep(-1*window.columnsPerPage);}

      const scrollNextCheckpoint = () => {
        current_checkpoint_index++;
        if(current_checkpoint_index >= checkpoints.length)
          current_checkpoint_index = checkpoints.length-1;

        setScrollFraction(checkpoints[current_checkpoint_index]);
      }
      const scrollPrevCheckpoint = () => {
        current_checkpoint_index--;
        if(current_checkpoint_index < 0)
          current_checkpoint_index = 0;
        setScrollFraction(checkpoints[current_checkpoint_index]);
      }

      document.getElementById('projectView_outer').addEventListener('wheel', function (e) {
          var delta = e.wheelDelta ? e.wheelDelta : -e.deltaY;

          if(delta > 0){
            scrollPrevCheckpoint(); //scrollStepLeft();
          } else {
            scrollNextCheckpoint(); //scrollStepRight();
          }
      }, false);

      function getListOfImages() {
        str = document.getElementById('scrollArticle').innerHTML;   

        console.log(str)

        let images = [];
        let regex = /<img\s+src="([^"]+)"\s+alt="([^"]+)"/g;
        const imgCollection = document.getElementsByTagName('img');
        for (let item of imgCollection) {
          console.log('src :', item.src)
          console.log('alt :', item.alt)
          images.push({src: item.src, alt: item.alt});
        }

        //put images into swiper-wrapper
        let swiperWrapper = document.getElementById('projectView_swiperWrapper');
        swiperWrapper.innerHTML = '';
        images.forEach(image => {
          swiperWrapper.innerHTML += `<div class="swiper-slide">
                                        <img src="${image.src}" alt="${image.alt}" class="swiper-slide">
                                      </div>`;
        }); 
        swiper.update();
      }

      window.addEventListener('load', function() {
        console.log("get list of images")
        getListOfImages();
        console.log("/get list of images")

        onResize();
        processSlug();
        //window.history.pushState({"html":html,"pageTitle":"fdsfsdf"},"", "somePath");
      });

      window.addEventListener('resize', function() {
        onResize();
      });

      function hidePhantomColumn(){
        document.querySelector('.projectView_phantomColumn').style.display = 'none';
      }

      function updatePhantomColumn(){
        if(window.columnsPerPage == 1){
          hidePhantomColumn();
          return;
        }

        if (window.numberOfColumns % 2 === 0) {
          hidePhantomColumn();
        } else {
          document.querySelector('.projectView_phantomColumn').style.display = 'block';
          window.numberOfColumns = numberOfColumns+1;
        }
      }

      function recalcColumnsPerPage(){
        var projectViewOuter = document.getElementById('projectView_outer');
        var elementWidth = projectViewOuter.offsetWidth;
        window.columnsPerPage = parseInt( elementWidth/(416+15) ); //!!!PELIGRO!!! wrong magic numbers, parseint
        console.log("columnsPerPage: " + window.columnsPerPage);
      }

      function recalcColumnWidth(){
        if(window.columnsPerPage == 2){
          window.columnWidth = 416; //!!!PELIGRO!!! magic numbers
          
          document.getElementById('scrollArticle').style.columnWidth = window.columnWidth + 'px';
          console.log(">>>>>columnWidth: " + window.columnWidth);
          return;  
        }
        
        /*if(window.columnsPerPage > 2){
          console.log("window.columnsPerPage > 2: " + window.columnsPerPage);
          window.columnWidth = 416; //!!!PELIGRO!!! magic numbers
          
          document.getElementById('scrollArticle').style.columnWidth = window.columnWidth + 'px';
          console.log(">>>>>columnWidth: " + window.columnWidth);
          return; 
        }*/

        var projectViewOuter = document.getElementById('projectView_outer');
        var elementWidth = projectViewOuter.offsetWidth;
        window.columnWidth = elementWidth-30;//!!!PELIGRO!!! magic numbers

        
        document.getElementById('scrollArticle').style.columnWidth = window.columnWidth + 'px';

        console.log(">>>>>columnWidth: " + window.columnWidth);
      }
      
      function recalcNumberOfColumns(){
        hidePhantomColumn();

        let columnGap = parseInt(getComputedStyle(document.getElementById('scrollArticle')).columnGap);
        console.log("---->}>}>}>columnGap: " + columnGap);
        numberOfColumns = (document.getElementById('projectView_outer').scrollWidth+columnGap) / (window.columnWidth+columnGap); //!!!PELIGRO!!! magic number for padding
        console.log("numberOfColumns before floor: " + numberOfColumns);
        numberOfColumns = Math.floor(numberOfColumns);//Math.round(numberOfColumns);
        console.log("numberOfColumns after floor: " + numberOfColumns);
        window.numberOfColumns = numberOfColumns;
        
        updatePhantomColumn();
      }

      function recalcScrollStep(){
        window.scrollStep = 1/numberOfColumns;
        window.scrollStepPercent = 100 / numberOfColumns;
      }

      function redrawNavButtons(){
        document.getElementById('projectView_scrollNavBar').innerHTML = '';
        newNav = '';
        
        if(window.columnsPerPage == 0){
          console.log("window.columnsPerPage == 0");
          return;
        }


        numberOfButtons = window.numberOfColumns/window.columnsPerPage;
        numberOfButtons = Math.ceil(numberOfButtons);

        console.log("numberOfColumns: " + window.numberOfColumns);
        console.log("window.columnsPerPage: " + window.columnsPerPage);
        console.log("numberOfButtons: " + numberOfButtons);

        checkpoints = [];

        newNav += `<button class="projectView_navigationButtonNextCheckpoint"
                           id="navButton${numberOfButtons}"
                           onclick="scrollNextCheckpoint()">
                           >>
                  </button>`;

        for (let i = numberOfButtons-1; i >= 0; i--) {
          targetPersent = parseFloat((  (i*window.columnsPerPage) * 100 / window.numberOfColumns).toFixed(2));
          
          newNav += `<button class="projectView_navigationDigit"
                             id="navButton${i}"
                             targetPersent="${targetPersent}"
                             targetCheckpoint="${numberOfButtons-i}"
                             onclick="setScrollFraction(${targetPersent/100})">
                             ${i}
                    </button>`;

            checkpoints.unshift(targetPersent/100);
        }

        console.log("checkpoints: " + checkpoints);
        document.getElementById('projectView_scrollNavBar').innerHTML = newNav;
        document.getElementById('navButton0').classList.add('active');
      }

      function attractScrollToNearestColumn(){
        //processSlug();
      }
 
      function onResize() {
        recalcColumnsPerPage();
        recalcColumnWidth();
        recalcNumberOfColumns();
        recalcScrollStep();

        redrawNavButtons();
        attractScrollToNearestColumn();
      }

      function processSlug(){
        // Get the current URL
        var currentUrl = window.location.href;
        var slug = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);

        var parameter = slug.split('=')[1];
        if (typeof parameter === 'undefined') {
          parameter = 0;
        }

        frac = parseFloat(parameter) / 100;
        
        columnNumber = parseInt(frac/window.scrollStep);
        newPosition = columnNumber*window.scrollStep;

        //console.log("frac: "+ frac + " scrollStep:" + window.scrollStep + " number: " + columnNumber + " newPosition: " + newPosition);
        setScrollFraction(newPosition);
      }
    </script>

  <!-- Swiper JS -->
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  
  <!-- Initialize Image Swiper -->
  <script>
    const swiper = new Swiper(".mySwiper", {
      slidesPerView: 1,
      pagination: {
        el: ".swiper-pagination",
        type: "progressbar"
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev"
      }
    });

    function swipeToFraction(persent){
      nSlides = swiper.slides.length;

      if(nSlides == 0)
        return;

      targetSlideNumber = parseInt(nSlides * persent);

      swiper.slideTo(targetSlideNumber);
    }

    function printSwiper(){
      console.log("current index:" + swiper.realIndex);
      console.log("number of slides:" + swiper.slides.length);
      
      if(swiper.slides.length == 0)
        return;

      console.log("current persent:" + swiper.realIndex/swiper.slides.length);
      
      swipeToFraction(0.99);
    }
  </script>